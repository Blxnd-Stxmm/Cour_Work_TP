<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataGridView1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAH9GAAB+RQAAf0YBAIlVFgCccTsArYldALORaACpg1UAl2kwAIZQDwB+RQAAfkUAAAAA
        AAAAAAAAAAAAAAAAAAB4PAAFhE0KfoRNCoN4PAAGAAAAAAAAAAAAAAAAAAAAAH5FAAB+RQAAhVAOAJZn
        LgCmf08AsI5jAKyHWgCccDoAilcYAH9HAgB+RQAAf0YAAAAAAAAAAAAAe0ABAH1EAwCbbzoAAAAAAWoo
        ABSIUxMwmGszS6F3RF2jekhin3Q/W5RlK0aCSwgoWA4ADP///wCUZCsAe0ABAHo/AAAAAAAAjVseQ66K
        X++vjGDxlWYtSgAAAAB8QgAAekAAAI9dIgD///8AVAgAC4JKByWUZCpDnHA7W591QWeecz5il2kxTolV
        FTJsKwAVAAAAAaF4RgB+RQUAdjoAALmacQBwMQAQk2QrT7CNY5vJsZXR28y57ebcz/ns5Nr+7ebd/+vi
        2P7k2Mr42Mey58WsjsKuil+EkF8mO2IdAAmgdkEAAQAAAJdqMWjFrI3/xKuL/6B2QnAAAAAAnHA5AFwU
        AAiMWR06rIdbg8atjsDYx7Pl49jJ9urh1v7s5Nv/6+PY/+bcz/rczbvuzLWa0bSTa5yXajNSczYAE8u0
        kQCNWx2Ml2gwxqyHW/nDqYj/y7WZ/823nP/Mtpv/zLab/8y2m//Mtpv/zLab/823nP/Ks5f/wKWD/6eA
        UfGVZi64iVQUYdKfYgCZbDVwyK+S/8auj/+ieEZ4tY9fAIhTEl2VZi2ypHtK8L+jgf/Ks5f/zbab/8y2
        m//Mtpv/zLab/8y2m//Mtpv/zbec/8y1mf/Eq4v/r4tg+pdpMsmQXiKQjVocf5lsNYyTYyi0mGszgphq
        MoCYajKAmGoygJZoLoqQXyO5mGoygJhrM32YazN+l2oxfJVmLIeQXiK8lmculYxaG3mti2Aro3pIl8Sq
        iv/Eq4v/qoVWoLKQaDKQXyN8mGoymJBeIsGUZCqLl2kwfJhqMn6YazN9mGszfpFgJLGWZy6MmGoygJhq
        MoCYajKAmGszgZNjKLaZazSQj10ghp91QQAAAAAAfEIAWXY5AB2+oX8AqYNVANjHsgBiHAAYej8AeHk+
        ACJ/RwEpcjMAEaZ/UDm3l3B9uZp0ytK/p7/Yx7LZyrOX6uPYyfjo3tL/xayN/9jIs/nLtJjv07+o4dG9
        pczEq4zWv6OBj7OSa0iWZzIZgEcCJ3g8ACF5PgBqZyMAHOTZywCqhFcAvqKAAHU4ABl8QgBlGgAAAqqE
        VgAAAAAAf0YAAH9GACt/RgBXej8ABYVPEDOngVJ+tpZuvLORaeKphFXerope4cu0mM/XxrHyv6OA/9G9
        pP+sh1r/x6+R/7WUbP/08Or/7ebd/6V+Tf/dz73/oXhF/8y2m/+xjmT/6d/U/8Wsjf/Mtpr4z7qh2reY
        ceKrh1rfs5Jp4LWVbb+qhVeDhlESNXk+AAV/RgBYf0YAN39GAAB/RgAAAAAAAAAAAAB/RgAFf0YAYXo/
        AC6ETg6Iupt37sy2mv/Jspb/zLWa/9fFsP+1lW3/zrmf/6N7Sf/RvqX/s5Jo/8atj//KspX/8evk/+/p
        4f+3mHH/z7uh/7OSaf/GrY7/pn9P/7+jgP+qhVf/yrOX/6F3RP/Qu6L/3M26/8+6oP/Mtpr/tpZv8INN
        DIt6PwAtf0YAb39GAAh/RgAAAAAAAAAAAAASAAAAgksLAHg8ADOLVxmFtpZvpsKoie3BpYT/6+LY/76i
        f//WxK//vaB9/72hff/LtJj/zbed/9K+p/+9oH3/tZVt/6iBUv+gdkL/mm03/5xwOv+ieUf/qoRX/7iZ
        c//Eqov/xq2P/7aWb/+sh1r/zbid/8OpiP/z7uj/zLWa/8Ckg+64mXSni1gaiXk+AEaGURIADwAAAAAA
        AAAAAAAAgkgAAH9HDheuimCW3M27+PLs5f/e0L//xq2O/7udeP/m287/yrOW/+TYyv/TwKj/4NLB/8Cl
        g/+ZbDb/vqJ//9G8pP+siFv/tpZv/7GOZP+WZy7/lWYs/5dpMf+QXyT/rIhc/9vLuP/XxbD/1MGq/7ma
        df/n3dD/ybGU/8Knhv/e0L//8u3n/9zMuvuvi2GehE0XF4NJAAAAAAAAAAAAAHY6ABWccDun0b2l+eHU
        xP/YyLP/s5Fp/5xwO//DqIj/zbec/9zNu//l2s3/9O/p//z7+v/s5dv/5dvN//7+/////////Pv6////
        ///+/v7/9fHs//Tw6//18u3/8Orj//n39f/+/v7/+Pbz/+je0f/Vw6z/yrKW/8Sqiv+dcj3/spBn/9fG
        sf/g08P/08Cp+aB2Q6l3PAAZAAAAAAAAAAB9QwATiVUYT6J5R8DUwqv+0r+n/7CNYv/OuJ7/08Cp/93P
        vf/49vP///////r59//49fL//Pv6//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+///+/v///v7///7/
        ///+/v7//v7+//7+/v//////9fLt/8Sqi//HrpD/z7qh/6+MYf/RvaT/1sSv/6N6ScmJVRhUfUQAFgAA
        AAAAAAAAAAAAAJxwPGnh1MX0+vj2/9rKtv+3mHH/y7WZ/+Xazf/+/v///v7///j18v/Eqov/7ebd//7/
        ///+/v7//f39//7+/v/+/v7//f39//7+/////////v7///39/f/+/v7//v7+//7+/v/+/v7//v7+//v6
        +P/f0sH/zrie/8mxlP+4mXL/1sSu//j18v/j18j3m245eB0AAAEAAAAAl2gwAHc8BCG/ooDd6+PY/8+6
        oP+kfEv/n3VB/+fd0f///////v7+//7////h1MT/k2Qp/+ri1//+/////f39//7+/v/+/v7//v7+//7+
        /v/07+r/2sq3//Pu6f/+/////v////7+/v/+/f3//v7+//39/f/Svqb/lmgy/6uHWf/dzrz/nXI9/6F3
        Rf/Ks5f/6eDV/76hfud6PwUrgksHAJdoMACBSQVCm287vKuGWPKui1//wqiH/9XDrf/9/fz//v7+//3+
        /v//////w6mJ/31EAv/Eqor//v39//7+/v/+/v7//v7+//7+/v/+/v//zbed/4FJCP+oglP/7OTa/+nf
        1P/+/f3//v7+//7+/v/+/v7/1sSu/4tXGv+CSwf/4NLC/9G+pf++oX//r4tg/6qFV/abbjnBgkoGTYJL
        BwCXaDAAcTYADZxwOozCqIf749fI/9K/p//08Ov//f39//7+/v/+/v//7+nh/5lsNf98QgD/lGQq/+/o
        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
        bVt5QxMFf0cBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0OQMQvqKAqNvMuf+sh1r/r4xh/7GO
        ZP/ZybX/08Co/824nf/czbr/3c68/93Pvf/ay7f/tZVt/8evkP/8+/n////////////8+/r/8ezl/+3l
        3P/l2s3/zbid/8Gmhf/TwKn/ybGU/6uGWf+qhVf/nXI+/8+6oP/HrpDEgkwSHQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAUhcAAJptOxengFF6rope37iZc/+ieUb/wKSC/6R8S//Cp4f/wKSC/9jI
        s//ZyLP/3tC+/+LWx//m28//6N7S/+fd0f/m287/3tC+/9nJtf/dzrv/39HB/9rJtv/Vw63/q4ZZ/7GO
        ZP+edED/rYld/8OoiPKykWidnHE/J2gtAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoH
        AACbbzsA////AKeAVSquil+Ixq2O2rmadP3ApIL/uZp1/55zPv/Cp4b/sY9l/8y2m//ApIL/ybGU/8Op
        if/Fq4z/s5Jp/6mEVf+9oX3/q4ZY/72gff/Eq4v/zrme/7ORaP+2lm7/y7SY8b2hfrGui2JKbi8ABqV8
        SQBcIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG4yAwCogVIA////AKJ4
        SiGvjGJmzLabsauGWePDqYn7vqJ//66KXv/TwKj/so9l/8ivkv+ccDr/xKqK/6Z/T/+ngFD/zrmf/66K
        Xv+mf0//z7qh/7ORaPPMtpvQu515j62IXkB4PQAJxKmEAIROGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHI1AwCdcT8A0r6iAFACAAahd0cmvJ57U7CN
        Y4K4mXKrxKqLyLaVbtrWxK70uJhx/9XErf+5m3X6upx348u0mNXJsZS+upx3nLudeXCsh1w/kWAoFf//
        /wC2lm4AhlEaAEIIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAA=
</value>
  </data>
</root>